imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@SboxApiBundle/Resources/config/services.yml" }
    - { resource: "@SboxUserBundle/Resources/config/services.yml" }
    - { resource: "@SboxSessionBundle/Resources/config/services.yml" }
    - { resource: "@SboxUserSpecificEntityEncryptionBundle/Resources/config/services.yml" }
    - { resource: "@SboxMessageBundle/Resources/config/services.yml" }
    - { resource: "@SboxCryptoBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi: ~
    #translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.root_dir%/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        #handler_id:  session.handler.native_file
        handler_id: sbox_session.handler
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
        storage_id: session.storage.native
        name: sbox_session
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

    serializer: { enable_annotations: true }

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_pgsql
        host: '%database_host%'
        user: '%database_user%'
        dbname: '%database_name%'
        charset: UTF8
        types:
            binarystring: Sbox\UserSpecificEntityEncryptionBundle\Type\BinaryStringType

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }

fos_rest:
    param_fetcher_listener: true
    format_listener:
        rules:
            fallback_format: json
            prefer_extension: false
            priorities: [json, xml]
    view:
        view_response_listener: force
        formats:
            json: true
            xml: true
            jsonp: false
            rss: false
            html: false
        failed_validation: HTTP_BAD_REQUEST

nelmio_cors:
        defaults:
            allow_credentials: false
            allow_origin: []
            allow_headers: []
            allow_methods: []
            expose_headers: []
            max_age: 0
            hosts: []
            origin_regex: false
            forced_allow_origin_value: ~
        paths:
            '^/api/':
                allow_origin: ['*']
                allow_headers: ['X-Custom-Auth', 'content-type']
                allow_methods: ['POST', 'PUT', 'GET', 'DELETE', 'OPTIONS']
                allow_credentials: true
                max_age: 3600
            '^/':
                origin_regex: true
                allow_origin: ['^http://localhost:[0-9]+']
                allow_headers: ['X-Custom-Auth']
                allow_methods: ['POST', 'PUT', 'GET', 'DELETE']
                max_age: 3600
                hosts: ['^api\.']

# from https://github.com/nelmio/NelmioSecurityBundle
nelmio_security:
    # signs/verifies all cookies
    #signed_cookie:
    #    names: ['*']
    # prevents framing of the entire site
    clickjacking:
        paths:
            '^/.*': DENY
    # prevents redirections outside the website's domain
    external_redirects:
        abort: true
        log: true

    # prevents inline scripts, unsafe eval, external scripts/images/styles/frames, etc
    csp:
        hosts: []
        content_types: []
        hash:
            algorithm: sha512
        enforce:
            level1_fallback: false
            browser_adaptive:
                enabled: false
            report-uri: %router.request_context.base_url%/nelmio/csp/report
            default-src:
                - 'self'
            script-src:
                - 'self'
            block-all-mixed-content: true # defaults to false, blocks HTTP content over HTTPS transport
            # upgrade-insecure-requests: true # defaults to false, upgrades HTTP requests to HTTPS transport

    # disables content type sniffing for script resources
    content_type:
        nosniff: true

    # forces Microsoft's XSS-Protection with
    # its block mode
    xss_protection:
        enabled: true
        mode_block: true

    # Send a full URL in the `Referer` header when performing a same-origin request,
    # only send the origin of the document to secure destination (HTTPS->HTTPS),
    # and send no header to a less secure destination (HTTPS->HTTP).
    # If `strict-origin-when-cross-origin` is not supported, use `no-referrer` policy,
    # no referrer information is sent along with requests.
    referrer_policy:
        enabled: true
        policies:
            - 'no-referrer'
            - 'strict-origin-when-cross-origin'

    # forces HTTPS handling, don't combine with flexible mode
    # and make sure you have SSL working on your site before enabling this
#    forced_ssl:
#        hsts_max_age: 2592000 # 30 days
#        hsts_subdomains: true
#        redirect_status_code: 302 # default, switch to 301 for permanent redirects

    # flexible HTTPS handling, read the detailed config info
    # and make sure you have SSL working on your site before enabling this
#    flexible_ssl:
#        cookie_name: auth
#        unsecured_logout: false

nelmio_api_doc:
    documentation:
        info:
            title: sbox
            description: Share your files securely
            version: 1.0.0
    routes:
        path_patterns: # an array of regexps
            - ^/api

sbox_user_specific_entity_encryption:
    user_class: Sbox\UserBundle\Entity\User
    encryptable_entities:
        - { key: message, class: Sbox\MessageBundle\Entity\Message }
        - { key: attachment, class: Sbox\MessageBundle\Entity\Attachment }
